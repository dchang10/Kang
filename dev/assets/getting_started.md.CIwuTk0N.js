import{_ as o}from"./chunks/coordinate.BKbbz5w3.js";import{_ as r}from"./chunks/raytrace.6sDSZwm2.js";import{_ as n,c as a,j as e,a as t,a4 as s,o as i}from"./chunks/framework.Cdi8gSRB.js";const Z=JSON.parse('{"title":"What is Krang.jl?","description":"","frontmatter":{},"headers":[],"relativePath":"getting_started.md","filePath":"getting_started.md","lastUpdated":null}'),l={name:"getting_started.md"},c=s('<h1 id="What-is-Krang.jl?" tabindex="-1">What is Krang.jl? <a class="header-anchor" href="#What-is-Krang.jl?" aria-label="Permalink to &quot;What is Krang.jl? {#What-is-Krang.jl?}&quot;">​</a></h1><p>Kerr Raytracer for Analytic Null Geodesics (Krang) is a raytracing code for geometries that are embedded in the Kerr spacetime. Krang solves the Kerr geodesic problem using the analytic solutions that have been derived from the Hamilton-Jacobi Formalism. This choice makes the code efficient and accurate, and is an ideal formalism to isolated sub images that manifest from strong lensing.</p><h2 id="philosophy" tabindex="-1">Philosophy <a class="header-anchor" href="#philosophy" aria-label="Permalink to &quot;Philosophy&quot;">​</a></h2><p>The current philosophy of Krang is to raytrace meshes. Meshes are made by &#39;painting&#39; materials onto geometries. These are then viewed by cameras that are sensitive to particular observables (<em>e.g. intensity and polarization</em>).</p><h2 id="raytracing" tabindex="-1">Raytracing <a class="header-anchor" href="#raytracing" aria-label="Permalink to &quot;Raytracing&quot;">​</a></h2>',5),h={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},d={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.355ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.999ex",height:"1.95ex",role:"img",focusable:"false",viewBox:"0 -705 883.6 862.1","aria-hidden":"true"},m=s('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g></g></g>',1),p=[m],_=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("msub",null,[e("mi",null,"θ"),e("mi",null,"s")])])],-1),T={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.029ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.054ex",height:"1.649ex",role:"img",focusable:"false",viewBox:"0 -716 1350 729","aria-hidden":"true"},u=s('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D70F" d="M39 284Q18 284 18 294Q18 301 45 338T99 398Q134 425 164 429Q170 431 332 431Q492 431 497 429Q517 424 517 402Q517 388 508 376T485 360Q479 358 389 358T299 356Q298 355 283 274T251 109T233 20Q228 5 215 -4T186 -13Q153 -13 153 20V30L203 192Q214 228 227 272T248 336L254 357Q254 358 208 358Q206 358 197 358T183 359Q105 359 61 295Q56 287 53 286T39 284Z" style="stroke-width:3;"></path></g></g></g>',1),x=[u],Q=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",{mathvariant:"normal"},"Δ"),e("mi",null,"τ")])],-1),w=e("h3",{id:"Raytracing-conical-surfaces",tabindex:"-1"},[t("Raytracing conical surfaces "),e("a",{class:"header-anchor",href:"#Raytracing-conical-surfaces","aria-label":'Permalink to "Raytracing conical surfaces {#Raytracing-conical-surfaces}"'},"​")],-1),f={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},y={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.023ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.061ex",height:"1.618ex",role:"img",focusable:"false",viewBox:"0 -705 469 715","aria-hidden":"true"},b=e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D703",d:"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z",style:{"stroke-width":"3"}})])])],-1),v=[b],k=e("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"θ")])],-1),M=s('<p><img src="'+o+'" alt=""></p><p style="text-align:center;">n=0 and n=1 images of emission coordinates originating from conical surfaces.</p><h3 id="Raytracing-with-rays-parameterized-by-Mino-time" tabindex="-1">Raytracing with rays parameterized by Mino time <a class="header-anchor" href="#Raytracing-with-rays-parameterized-by-Mino-time" aria-label="Permalink to &quot;Raytracing with rays parameterized by Mino time {#Raytracing-with-rays-parameterized-by-Mino-time}&quot;">​</a></h3><p><img src="'+r+'" alt=""></p><p style="text-align:center;">Coordinate evolution with Mino time.</p>',5);function P(S,R,j,C,V,A){return i(),a("div",null,[c,e("p",null,[t("Light rays in this module can be parameterized in terms of either the cones ("),e("mjx-container",h,[(i(),a("svg",d,p)),_]),t("), or the minotime ("),e("mjx-container",T,[(i(),a("svg",g,x)),Q]),t("). Parameterization interms of cones allows for images to separated interms of sub images and ray traced individually.")]),w,e("p",null,[t("Surfaces of constant "),e("mjx-container",f,[(i(),a("svg",y,v)),k]),t(" define spin axis centered cones whose apex lie at the origin of the coordinate system.")]),M])}const D=n(l,[["render",P]]);export{Z as __pageData,D as default};
